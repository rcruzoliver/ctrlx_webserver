# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbtypes

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# actual values of the kinematics
class RobotActualValues(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = RobotActualValues()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsRobotActualValues(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # RobotActualValues
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # actual position
    # RobotActualValues
    def ActualPosX(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # RobotActualValues
    def ActualPosY(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # RobotActualValues
    def ActualPosZ(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

def RobotActualValuesStart(builder): builder.StartObject(3)
def Start(builder):
    return RobotActualValuesStart(builder)
def RobotActualValuesAddActualPosX(builder, actualPosX): builder.PrependFloat64Slot(0, actualPosX, 0.0)
def AddActualPosX(builder, actualPosX):
    return RobotActualValuesAddActualPosX(builder, actualPosX)
def RobotActualValuesAddActualPosY(builder, actualPosY): builder.PrependFloat64Slot(1, actualPosY, 0.0)
def AddActualPosY(builder, actualPosY):
    return RobotActualValuesAddActualPosY(builder, actualPosY)
def RobotActualValuesAddActualPosZ(builder, actualPosZ): builder.PrependFloat64Slot(2, actualPosZ, 0.0)
def AddActualPosZ(builder, actualPosZ):
    return RobotActualValuesAddActualPosZ(builder, actualPosZ)
def RobotActualValuesEnd(builder): return builder.EndObject()
def End(builder):
    return RobotActualValuesEnd(builder)