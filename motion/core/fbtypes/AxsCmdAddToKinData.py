# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbtypes

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# parameters of the axis command add-to-kin
class AxsCmdAddToKinData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = AxsCmdAddToKinData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsAxsCmdAddToKinData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # AxsCmdAddToKinData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # name of the kinematics to which this axis should be added
    # AxsCmdAddToKinData
    def KinName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # should this be a buffered command?
    # AxsCmdAddToKinData
    def Buffered(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def AxsCmdAddToKinDataStart(builder): builder.StartObject(2)
def Start(builder):
    return AxsCmdAddToKinDataStart(builder)
def AxsCmdAddToKinDataAddKinName(builder, kinName): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(kinName), 0)
def AddKinName(builder, kinName):
    return AxsCmdAddToKinDataAddKinName(builder, kinName)
def AxsCmdAddToKinDataAddBuffered(builder, buffered): builder.PrependBoolSlot(1, buffered, 0)
def AddBuffered(builder, buffered):
    return AxsCmdAddToKinDataAddBuffered(builder, buffered)
def AxsCmdAddToKinDataEnd(builder): return builder.EndObject()
def End(builder):
    return AxsCmdAddToKinDataEnd(builder)