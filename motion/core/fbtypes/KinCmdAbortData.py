# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbtypes

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# Command data for kinAbort command and kinInterrupt command
class KinCmdAbortData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = KinCmdAbortData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsKinCmdAbortData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # KinCmdAbortData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # dynamic limits of the deceleration ramp (default is "soft stop")
    # KinCmdAbortData
    def Type(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

def KinCmdAbortDataStart(builder): builder.StartObject(1)
def Start(builder):
    return KinCmdAbortDataStart(builder)
def KinCmdAbortDataAddType(builder, type): builder.PrependInt8Slot(0, type, 0)
def AddType(builder, type):
    return KinCmdAbortDataAddType(builder, type)
def KinCmdAbortDataEnd(builder): return builder.EndObject()
def End(builder):
    return KinCmdAbortDataEnd(builder)